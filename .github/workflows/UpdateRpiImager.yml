name: Update rpi-imager.json

on:
  push:
    branches:
      - "chore/fix-release-workflow"
  workflow_dispatch:

jobs:
  write-json-test:
    name: Write JSON test
    runs-on: ubuntu-latest
    steps:
      - name: Generate JSON
        id: json
        uses: actions/github-script@v6
        env:
          name: "Mainsail OS 1.2.3"
          description: "Type: 32-bit, SBC: RPI"
          url: "https://github.com/mainsail-crew/MainsailOS/releases/download/123/456.img.xz"
          icon: "https://os.mainsail.xyz/rpi-imager.png"
          init_format: "systemd"
          release_date: "1233243"
          extract_size: 1234
          extract_sha256: "adlksfoeiwhfwefkwhef"
          image_download_size: 123
          image_download_sha256: "a oishfkashdfk hasdfksa kdfhas"
        with:
          result-encoding: string
          script: |
            const fs = require('fs')
            const { name, description, url, icon, init_format, release_date, extract_size, extract_sha256, image_download_size, image_download_sha256 } = process.env
            const json = JSON.stringify({
              name,
              description,
              url,
              icon,
              init_format,
              release_date,
              extract_size,
              extract_sha256,
              image_download_size,
              image_download_sha256
            })

            fs.writeFileSync('./test.json', json)
            //fs.writeFileSync('${{ steps.copy-image.outputs.image }}.json', json)

  update-rpi-imager:
    name: Update rpi-imager json
    runs-on: ubuntu-latest
    steps:
      - name: Download snipes
        uses: robinraju/release-downloader@v1.6
        with:
          repository: "mainsail-crew/MainsailOS"
          latest: true
          fileName: "*-raspberry-*.json"
          out-file-path: "downloads"

      - name: Debug
        run: |
          ls ./downloads/*
          touch rpi-imager.json

      - name: Combine JSON
        id: json
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const downloadFolder = './downloads/'
            const fs = require('fs')
            const os_list = []

            fs.readdirSync(downloadFolder).forEach(file => {
              const raw = fs.readFileSync('./downloads/' + file, {encoding:'utf8', flag:'r'})
              try {
                const os = JSON.parse(jsonString)
                console.log(os)
                os_list.push(os)
              } catch (err) {
                console.log("Error parsing JSON string:", err)
              }
            })

            const json = JSON.stringify({os_list})
            console.log(json)
            fs.writeFileSync('rpi-imager.json', json)

#      - name: Upload JSON
#        if: success()
#        uses: xresloader/upload-to-github-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          release_id: ${{ needs.release.outputs.id }}
#          file: rpi-imager.json

      - name: Move in seperate dir
        run: |
          mkdir upload
          mv rpi-imager.json ./upload
          echo "::group::json output"
          cat ./upload/rpi-imager.json
          echo "::endgroup::"


#      - name: Upload to remote server
#        uses: SamKirkland/FTP-Deploy-Action@4.3.3
#        with:
#          server: ${{ secrets.OSHOST }}
#          username: ${{ secrets.OSUSER }}
#          password: ${{ secrets.OSPASSWORD }}
#          local-dir: ./upload/
